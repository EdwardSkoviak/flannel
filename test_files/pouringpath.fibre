var containers, containerNum, quantities, desired;

function pouringPath() {}

function update(depth, level, i, j)
    {
    var io,jo, result;
    io = quantities[i];
    jo = quantities[j];
    if(i != j)
        {
        if(containers[j] != quantities[j])
            {
            var need;
            need = containers[j] - quantities[j];
            if(need == quantities[i])
                {
                quantities[j] = containers[j];
                quantities[i] = 0;
                }
            else 
                {
                if(need > quantities[i])
                    {
                    quantities[j] = quantities[j] + quantities[i];
                    quantities[i] = 0;
                    }
                else
                    {
                    quantities[j] = containers[j];
                    quantities[i] = quantities[i] - need;
                    }
                }
            }
        }
    result = pouringPath(depth, level + 1);
    quantities[i] = io;
    quantities[j] = jo;
    result = result;
    }

function check()
    {
    var x,result;
    x = 0;
    result = false;
    while(x<containerNum && result == false)
        {
        result = (quantities[x] == desired);
        x = x + 1;
        }
    result = result;
    }

function pouringPath(depth,level)
    {
    var result;
    if(check() == true)
        result = true;
    else
        {
        if(depth == level)
            result = false;
        else
            {
            var i;
            i = 0;
            result = false;
            while(i<containerNum && result == false)
                {
                var j;
                j = 0;
                while(j<containerNum && result == false)
                    {
                    result = update(depth,level,i,j);
                    j = j + 1;
                    }
                i = i + 1;
                }
            }
        }
    result = result;
    }

function main()
    {
    var depth, result;

    /* Container capacities and their relative quantities, adjust as you see fit */
    containers = array(3);
    quantities = array(3);
    containerNum = 3;
    desired = 3;

    containers[0] = 5;
    containers[1] = 4;
    containers[2] = 1;
    quantities[0] = 5;
    quantities[1] = 0;
    quantities[2] = 0;

    depth = 1;
    result = false;
    while(result == false)
        {
        result = pouringPath(depth, 0);
        depth = depth + 1;
        }
    print("It took ",depth - 1," transfers to accommplish.");
    }
